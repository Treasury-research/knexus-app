import { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure } from '@chakra-ui/react';
import ufo from '../../../public/images/ufo.png';
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState } from "react";

export default function Home() {
	const [purpose, setPurpose] = useState<string>("");
	const [service, setService] = useState<string>("");
	const [isMenuHover, setIsMenuHover] = useState(false);
	const [isRealTimeHover, setIsRealTimeHover] = useState(false);
  const [submitUserInfoLoading, setSubmitUserInfoLoading] = useState(false)
  const { isOpen, onOpen, onClose } = useDisclosure()
	const router = useRouter();
	const handleSubmit = async () => {
	};

	return (
		<>
			<Head>
				<title>Create Api Key</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
			</Head>
			<div className="flex flex-row justify-center items-center mx-20 mt-[100px]">
      <div className="mt-10 ">
        <div className='w-64 h-64 mx-auto my-5'>
          <Image src={ufo} alt='' className='w-full h-full object-cover'/>
        </div>
        <p className='font-jura text-xl text-center flex justify-center -mt-10'>No Group has been created for your account.</p>
        <div className="font-jura text-xl text-center flex justify-center mt-8">
          <button className='flex-shrink-0 mb-6 flex items-center p-1 px-4 rounded bg-stone-600 hover:bg-stone-700 active:bg-stone-500 focus:ring-stone-500 text-sm'
          onClick={onOpen}>
            Create Group
          </button>
          <Modal isOpen={isOpen} onClose={() => {
            onClose();
          }} size="lg">
          <ModalOverlay />
          <ModalContent>
            <ModalHeader>Group Name</ModalHeader>
            <ModalCloseButton />
            <ModalBody>
              <label className="relative block my-1">
                <input className={`bg-[#A0A79F] text-[#000] placeholder:text-[#666] block w-full border border-slate-300 rounded-md py-2 pr-3 shadow-sm focus:outline-none focus:border-transparent focus:ring-sky-500 focus:ring-1 sm:text-sm`}
                  placeholder={`Please enter`} type="text" name="search" onChange={(e)=> {
                  }} />
              </label>
              {/* { invalidEmail ?
                <div className='text-[#FF0000] text-xs font-swiss'>Invalid email address. Only use numbers, letters, or +-_ characters.</div>
                : null
              } */}
            </ModalBody>
            <ModalFooter>
              <Button isLoading={submitUserInfoLoading} loadingText='Submitting' onClick={() => handleSubmit() }
              style={{borderRadius: 6, fontSize: 14}} className="rounded border-zinc-700 border-solid border-2 py-1 px-4">Submit</Button>
            </ModalFooter>
          </ModalContent>
        </Modal>
        </div>
      </div>
			</div>
		</>
	);
}
